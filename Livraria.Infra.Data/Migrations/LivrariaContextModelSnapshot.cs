// <auto-generated />
using System;
using Livraria.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Livraria.Infra.Data.Migrations
{
    [DbContext(typeof(LivrariaContext))]
    partial class LivrariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Livraria.Domain.Entities.FolderInstituicaoDeEnsino.InstituicaoDeEnsino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstituicaodeEnsino");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderLivro.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Autor");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Editora")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Editora");

                    b.Property<bool>("Emprestado")
                        .HasColumnType("bit");

                    b.Property<string>("Genero")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Genero");

                    b.Property<int?>("IdUsuarioReserva")
                        .HasColumnType("int");

                    b.Property<int>("Paginas")
                        .HasColumnType("int")
                        .HasColumnName("Paginas");

                    b.Property<DateTime>("Publicacao")
                        .HasColumnType("date")
                        .HasColumnName("Publicacao");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioReserva");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderUsuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdInstituicaoDeEnsino")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdInstituicaoDeEnsino");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderUsuarioLivroEmprestado.UsuarioLivroEmprestado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("IsDevolvido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioLivroEmprestado");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderLivro.Livro", b =>
                {
                    b.HasOne("Livraria.Domain.Entities.FolderUsuario.Usuario", "UsuarioReserva")
                        .WithMany()
                        .HasForeignKey("IdUsuarioReserva");

                    b.Navigation("UsuarioReserva");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderUsuario.Usuario", b =>
                {
                    b.HasOne("Livraria.Domain.Entities.FolderInstituicaoDeEnsino.InstituicaoDeEnsino", "InstituicaoDeEnsino")
                        .WithMany()
                        .HasForeignKey("IdInstituicaoDeEnsino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituicaoDeEnsino");
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderUsuarioLivroEmprestado.UsuarioLivroEmprestado", b =>
                {
                    b.HasOne("Livraria.Domain.Entities.FolderUsuario.Usuario", null)
                        .WithMany("LivrosEmprestados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Livraria.Domain.Entities.FolderUsuario.Usuario", b =>
                {
                    b.Navigation("LivrosEmprestados");
                });
#pragma warning restore 612, 618
        }
    }
}
